//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: ModelController.cpp
//
// MATLAB Coder version            : 5.2
// C/C++ source code generated on  : 06-Aug-2021 14:54:47
//

// Include Files
#include "ModelController.h"
#include <algorithm>
#include <cmath>

// Function Definitions
//
// Arguments    : void
// Return Type  : void
//
ModelController::ModelController()
{
  static const double dv[15]{0.06,
                             0.128,
                             0.22749999999999998,
                             0.118,
                             0.0363,
                             0.3,
                             0.29484,
                             0.165888,
                             0.152928,
                             10.0,
                             0.001,
                             0.0050866042499999988,
                             0.000905969664,
                             0.00070978982399999991,
                             0.1};
  static const double dv1[7]{
      0.1, 0.145, 0.236, 0.256, 0.355, 0.78539816339744828, 2.5132741228718345};
  std::copy(&dv[0], &dv[15], &this->robot_inertial_par[0]);
  for (int i{0}; i < 7; i++) {
    this->robot_dim[i] = dv1[i];
  }
  this->g = 9.81;
}

//
// Arguments    : void
// Return Type  : void
//
ModelController::~ModelController()
{
  // (no terminate code required)
}

//
// B_LAMBDA_DYN_CALC
//     B_LAMBDA_DYN =
//     B_LAMBDA_DYN_CALC(ALPHA,BETA,BETA_DOT,G,GAMMA,H1,H2,L_A,L_D,L_CM_C,L_CM_D,L_CM_AH,L_CM_BODY,L_H,M_AH,M_C,M_BODY,M_D,M_W,PHI_R,PHI_R_DOT,THETA_ST,THETA_ST_BODY)
//
// Arguments    : double alpha
//                double b_gamma
//                double h1
//                double h2
//                double phi_r
//                double beta
//                double phi_r_dot
//                double beta_dot
//                double b_lambda_dyn[2]
// Return Type  : void
//
void ModelController::b_lambda_dyn_calc(double alpha, double b_gamma, double h1,
                                        double h2, double phi_r, double beta,
                                        double phi_r_dot, double beta_dot,
                                        double b_lambda_dyn[2])
{
  double b_b_lambda_dyn_tmp;
  double b_lambda_dyn_tmp;
  double c_b_lambda_dyn_tmp;
  double d_b_lambda_dyn_tmp;
  double e_b_lambda_dyn_tmp;
  double f_b_lambda_dyn_tmp;
  double g_b_lambda_dyn_tmp;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t16;
  double t16_tmp;
  double t17;
  double t18;
  double t19_tmp_tmp;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     29-Jul-2021 16:01:06
  t2 = beta_dot * beta_dot;
  t3 = h1 * h1;
  t4 = h2 * h2;
  t5 = phi_r_dot * phi_r_dot;
  t6 = (beta + phi_r) + this->robot_dim[5];
  t7 = (b_gamma + phi_r) + this->robot_dim[5];
  t10 = std::cos(t6);
  t11 = std::cos(t7);
  t12 = std::sin(t6);
  t13 = std::sin(t7);
  t14 = phi_r + -this->robot_dim[6];
  t6 = (phi_r + -alpha) + this->robot_dim[5];
  t16_tmp = this->robot_dim[3] * this->robot_inertial_par[9];
  t16 = t16_tmp * t12;
  t17 = std::cos(t6);
  t18 = std::sin(t6);
  t19_tmp_tmp = this->robot_inertial_par[1] * this->robot_inertial_par[7];
  t6 = t19_tmp_tmp * t12;
  t7 = this->robot_dim[0] * this->robot_inertial_par[8];
  t12 = -t16 + -(t6 * 2.0);
  b_lambda_dyn_tmp = this->robot_inertial_par[2] * this->robot_inertial_par[6];
  b_b_lambda_dyn_tmp =
      this->robot_inertial_par[3] * this->robot_inertial_par[8];
  c_b_lambda_dyn_tmp = this->robot_dim[4] * this->robot_inertial_par[8];
  d_b_lambda_dyn_tmp = this->robot_dim[4] * this->robot_inertial_par[9];
  e_b_lambda_dyn_tmp = this->robot_dim[4] * this->robot_inertial_par[7];
  f_b_lambda_dyn_tmp = h1 * this->robot_dim[4];
  g_b_lambda_dyn_tmp =
      this->robot_inertial_par[4] * this->robot_inertial_par[9];
  b_lambda_dyn[0] =
      (-t5 *
           (((((((t12 + g_b_lambda_dyn_tmp * std::cos(t14)) + t7 * t18 * 2.0) +
                b_lambda_dyn_tmp * t18 * 2.0) -
               b_b_lambda_dyn_tmp * t11 * 2.0) +
              c_b_lambda_dyn_tmp * t18 * 2.0) +
             d_b_lambda_dyn_tmp * t18) +
            e_b_lambda_dyn_tmp * t18 * 2.0) -
       t2 * ((((((t12 + t7 * t3 * t18 * 2.0) +
                 b_lambda_dyn_tmp * t3 * t18 * 2.0) -
                b_b_lambda_dyn_tmp * t4 * t11 * 2.0) +
               c_b_lambda_dyn_tmp * t3 * t18 * 2.0) +
              d_b_lambda_dyn_tmp * t3 * t18) +
             e_b_lambda_dyn_tmp * t3 * t18 * 2.0)) +
      beta_dot * phi_r_dot *
          (((((((t16 * 2.0 + t6 * 4.0) + h1 * this->robot_dim[0] *
                                             this->robot_inertial_par[8] * t18 *
                                             4.0) +
               h1 * this->robot_inertial_par[2] * this->robot_inertial_par[6] *
                   t18 * 4.0) +
              h2 * this->robot_inertial_par[3] * this->robot_inertial_par[8] *
                  t11 * 4.0) +
             f_b_lambda_dyn_tmp * this->robot_inertial_par[8] * t18 * 4.0) +
            f_b_lambda_dyn_tmp * this->robot_inertial_par[9] * t18 * 2.0) +
           f_b_lambda_dyn_tmp * this->robot_inertial_par[7] * t18 * 4.0);
  t12 = beta_dot * h1;
  f_b_lambda_dyn_tmp = t12 * this->robot_dim[4];
  b_lambda_dyn[1] =
      ((((((((((((((((((((((((((((this->g * this->robot_inertial_par[6] * -2.0 -
                                  this->g * this->robot_inertial_par[8] * 2.0) -
                                 this->g * this->robot_inertial_par[9]) -
                                this->g * this->robot_inertial_par[7] * 2.0) -
                               this->g * this->robot_inertial_par[5] * 2.0) +
                              t7 * t5 * t17 * 2.0) +
                             b_lambda_dyn_tmp * t5 * t17 * 2.0) +
                            b_b_lambda_dyn_tmp * t5 * t13 * 2.0) -
                           t16_tmp * t2 * t10) -
                          t16_tmp * t5 * t10) -
                         t19_tmp_tmp * t2 * t10 * 2.0) -
                        t19_tmp_tmp * t5 * t10 * 2.0) +
                       c_b_lambda_dyn_tmp * t5 * t17 * 2.0) +
                      d_b_lambda_dyn_tmp * t5 * t17) +
                     e_b_lambda_dyn_tmp * t5 * t17 * 2.0) -
                    g_b_lambda_dyn_tmp * t5 * std::sin(t14)) -
                   beta_dot * this->robot_dim[3] * this->robot_inertial_par[9] *
                       phi_r_dot * t10 * 2.0) -
                  beta_dot * this->robot_inertial_par[1] *
                      this->robot_inertial_par[7] * phi_r_dot * t10 * 4.0) +
                 t7 * t2 * t3 * t17 * 2.0) +
                b_lambda_dyn_tmp * t2 * t3 * t17 * 2.0) +
               b_b_lambda_dyn_tmp * t2 * t4 * t13 * 2.0) +
              c_b_lambda_dyn_tmp * t2 * t3 * t17 * 2.0) +
             d_b_lambda_dyn_tmp * t2 * t3 * t17) +
            e_b_lambda_dyn_tmp * t2 * t3 * t17 * 2.0) -
           t12 * this->robot_dim[0] * this->robot_inertial_par[8] * phi_r_dot *
               t17 * 4.0) -
          t12 * this->robot_inertial_par[2] * this->robot_inertial_par[6] *
              phi_r_dot * t17 * 4.0) +
         beta_dot * h2 * this->robot_inertial_par[3] *
             this->robot_inertial_par[8] * phi_r_dot * t13 * 4.0) -
        f_b_lambda_dyn_tmp * this->robot_inertial_par[8] * phi_r_dot * t17 *
            4.0) -
       f_b_lambda_dyn_tmp * this->robot_inertial_par[9] * phi_r_dot * t17 *
           2.0) +
      f_b_lambda_dyn_tmp * this->robot_inertial_par[7] * phi_r_dot * t17 * -4.0;
}

//
// File trailer for ModelController.cpp
//
// [EOF]
//
